security:
    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    providers:
        user_provider:
            entity:
                class: App\Entity\User
                property: username

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: user_provider

            form_login:
                login_path: login
                check_path: login
                username_parameter: _username
                password_parameter: _password
                enable_csrf: true

            logout:
                path: logout

            access_denied_handler: App\Security\AccessDeniedHandler

    access_control:
        - { path: ^/card-deck, roles: IS_AUTHENTICATED_FULLY, allow_if: "not is_granted('ROLE_ADMIN')" }

        - { path: ^/administration, roles: ROLE_ADMIN }

        - { path: ^/profile, roles: ROLE_USER }

        - { path: ^/, roles: PUBLIC_ACCESS }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10