{% extends 'base.html.twig' %}

{% block title %}Mis Mazos{% endblock %}

{% block styles %}
    {{ parent() }}

    <link rel="stylesheet" href="{{ asset('assets/styles/card-deck.css') }}">
{% endblock %}

{% block main %}
    <ul class="card-deck__list">
        {% for deck in cardDecks %}
            <li class="card-deck__list__tab {% if deck.id == currentCardDeckId %}active{% endif %}">
                <a href="{{ path('card_deck__list', {'id': deck.id}) }}">{{ deck.name }}</a>
            </li>
        {% endfor %}
    </ul>

    <section class="card-deck__list__content">
        {% if form is defined and form is not null %}
            {{ form_start(form) }}

                {{ form_row(form.name) }}

                <section class="card-deck__container">
                    {% for cardSlotIterator in 1..8 %}
                        <article class="card-slot"></article>
                    {% endfor %}
                </section>

                <input type="submit" value="Guardar">

                {% if form.cards is defined %}
                    <section class="cards__container grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 2xl:grid-cols-5 gap-6 py-6">
                        {% for card in form.cards %}
                            <label for="{{ card.vars.id }}" class="card relative cursor-pointer">
                                {{ form_widget(card, { attr: { class: 'hidden' } }) }}

                                <article class="aspect-[0.7] flex flex-col bg-white dark:bg-gray-800 rounded-xl overflow-hidden border border-gray-300 dark:border-gray-700 transition-shadow hover:shadow-lg">
{#                                    <figure class="h-52 bg-black bg-center bg-no-repeat bg-contain" style="background-image: url('{{ asset('/assets/images/content/cards/' ~ card.image) }}');">#}
{#                                        <data class="block p-1 text-xs text-white"></data>#}
{#                                    </figure>#}

                                    <div class="p-4 flex flex-col gap-2">
                                        <data class="text-sm font-semibold text-red-600 dark:text-red-400 bg-red-100
                                                     dark:bg-red-900 px-2 py-1 rounded-full self-start">❤️</data>

                                        <h4 class="text-lg font-bold text-gray-800 dark:text-gray-100">{{ card.vars.label }}</h4>
                                    </div>
                                </article>
                            </label>
                        {% endfor %}
                    </section>
                {% endif %}
            {{ form_end(form) }}
        {% endif %}

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const cardDeckContainer = document.querySelector('.card-deck__container');
                const cardsContainer = document.querySelector('.cards__container');
                const selectedClass = 'card-deck__card--selected';

                const cards = cardsContainer.querySelectorAll('.card');

                cards.forEach((card) => {
                    const checkbox = card.querySelector('input[type="checkbox"]');

                    if (checkbox.checked) {
                        const firstSlot = cardDeckContainer.querySelector('article.card-slot:first-of-type');
                        if (firstSlot) {
                            firstSlot.replaceWith(card);
                            card.classList.add(selectedClass);
                        }
                    }

                    checkbox.addEventListener('change', function (event) {
                        if (event.target.checked) {
                            const firstSlot = cardDeckContainer.querySelector('article.card-slot:first-of-type');
                            if (firstSlot) {
                                firstSlot.replaceWith(card);
                                card.classList.add(selectedClass);
                            } else {
                                event.target.checked = false;
                            }
                        } else {
                            cardsContainer.prepend(card);
                            card.classList.remove(selectedClass);

                            const newSlot = document.createElement('article');
                            newSlot.classList.add('card-slot');
                            cardDeckContainer.appendChild(newSlot);
                        }
                    });
                });
            });
        </script>
    </section>
{% endblock %}